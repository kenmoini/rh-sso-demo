kind: TemplateInstance
apiVersion: template.openshift.io/v1
metadata:
  name: petid-db-template-instance
spec:
  template:
    metadata:
      name: mariadb-persistent
      namespace: openshift
      labels:
        samples.operator.openshift.io/managed: 'true'
      annotations:
        openshift.io/display-name: MariaDB
        openshift.io/documentation-url: >-
          https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md
        samples.operator.openshift.io/version: 4.8.9
        tags: 'database,mariadb'
        description: >-
          MariaDB database service, with persistent storage. For more
          information about using this template, including OpenShift
          considerations, see
          https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md.


          NOTE: Scaling to more than one replica is not supported. You must have
          persistent volumes available in your cluster to use this template.
        openshift.io/long-description: >-
          This template provides a standalone MariaDB server with a database
          created.  The database is stored on persistent storage.  The database
          name, username, and password are chosen via parameters when
          provisioning this service.
        openshift.io/support-url: 'https://access.redhat.com'
        iconClass: icon-mariadb
        openshift.io/provider-display-name: 'Red Hat, Inc.'
    message: >-
      The following service(s) have been created in your project:
      ${DATABASE_SERVICE_NAME}.

             Username: ${MYSQL_USER}
             Password: ${MYSQL_PASSWORD}
        Database Name: ${MYSQL_DATABASE}
       Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

      For more information about using this template, including OpenShift
      considerations, see
      https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md.
    objects:
      - apiVersion: v1
        kind: Secret
        metadata:
          labels:
            app: pet-id
            app.kubernetes.io/name: '${DATABASE_SERVICE_NAME}'
            app.kubernetes.io/part-of: pet-id
            component: secret
          annotations:
            template.openshift.io/expose-database_name: '{.data[''database-name'']}'
            template.openshift.io/expose-password: '{.data[''database-password'']}'
            template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
            template.openshift.io/expose-username: '{.data[''database-user'']}'
          name: '${DATABASE_SERVICE_NAME}'
        stringData:
          database-name: '${MYSQL_DATABASE}'
          database-password: '${MYSQL_PASSWORD}'
          database-root-password: '${MYSQL_ROOT_PASSWORD}'
          database-user: '${MYSQL_USER}'
      - apiVersion: v1
        kind: Service
        metadata:
          annotations:
            template.openshift.io/expose-uri: 'mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mariadb")].port}'
          name: '${DATABASE_SERVICE_NAME}'
          labels:
            app: pet-id
            app.kubernetes.io/name: '${DATABASE_SERVICE_NAME}'
            app.kubernetes.io/part-of: pet-id
            component: service
        spec:
          ports:
            - name: mariadb
              port: 3306
          selector:
            name: '${DATABASE_SERVICE_NAME}'
      - apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '${DATABASE_SERVICE_NAME}'
          labels:
            app: pet-id
            app.kubernetes.io/name: '${DATABASE_SERVICE_NAME}'
            app.kubernetes.io/part-of: pet-id
            component: pvc
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: '${VOLUME_CAPACITY}'
      - apiVersion: v1
        kind: DeploymentConfig
        metadata:
          annotations:
            template.alpha.openshift.io/wait-for-ready: 'true'
          name: '${DATABASE_SERVICE_NAME}'
          labels:
            app: pet-id
            app.kubernetes.io/name: '${DATABASE_SERVICE_NAME}'
            app.kubernetes.io/part-of: pet-id
            component: deployment
        spec:
          replicas: 1
          selector:
            name: '${DATABASE_SERVICE_NAME}'
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                name: '${DATABASE_SERVICE_NAME}'
            spec:
              containers:
                - resources:
                    limits:
                      memory: '${MEMORY_LIMIT}'
                  readinessProbe:
                    exec:
                      command:
                        - /bin/sh
                        - '-i'
                        - '-c'
                        - >-
                          MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER
                          ping
                    initialDelaySeconds: 5
                    timeoutSeconds: 1
                  name: mariadb
                  livenessProbe:
                    exec:
                      command:
                        - /bin/sh
                        - '-i'
                        - '-c'
                        - >-
                          MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER
                          ping
                    initialDelaySeconds: 30
                    timeoutSeconds: 1
                  env:
                    - name: MYSQL_USER
                      valueFrom:
                        secretKeyRef:
                          key: database-user
                          name: '${DATABASE_SERVICE_NAME}'
                    - name: MYSQL_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: database-password
                          name: '${DATABASE_SERVICE_NAME}'
                    - name: MYSQL_ROOT_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: database-root-password
                          name: '${DATABASE_SERVICE_NAME}'
                    - name: MYSQL_DATABASE
                      valueFrom:
                        secretKeyRef:
                          key: database-name
                          name: '${DATABASE_SERVICE_NAME}'
                  ports:
                    - containerPort: 3306
                  imagePullPolicy: IfNotPresent
                  volumeMounts:
                    - mountPath: /var/lib/mysql/data
                      name: '${DATABASE_SERVICE_NAME}-data'
                  image: ' '
              volumes:
                - name: '${DATABASE_SERVICE_NAME}-data'
                  persistentVolumeClaim:
                    claimName: '${DATABASE_SERVICE_NAME}'
          triggers:
            - imageChangeParams:
                automatic: true
                containerNames:
                  - mariadb
                from:
                  kind: ImageStreamTag
                  name: 'mariadb:${MARIADB_VERSION}'
                  namespace: '${NAMESPACE}'
              type: ImageChange
            - type: ConfigChange
    parameters:
      - name: MEMORY_LIMIT
        displayName: Memory Limit
        description: Maximum amount of memory the container can use.
        value: 512Mi
        required: true
      - name: NAMESPACE
        displayName: Namespace
        description: The OpenShift Namespace where the ImageStream resides.
        value: openshift
      - name: DATABASE_SERVICE_NAME
        displayName: Database Service Name
        description: The name of the OpenShift Service exposed for the database.
        value: petid-db
        required: true
      - name: MYSQL_USER
        displayName: MariaDB Connection Username
        description: >-
          Username for MariaDB user that will be used for accessing the
          database.
        value: petid
        required: true
      - name: MYSQL_PASSWORD
        displayName: MariaDB Connection Password
        description: Password for the MariaDB connection user.
        value: petid
        required: true
      - name: MYSQL_ROOT_PASSWORD
        displayName: MariaDB root Password
        description: Password for the MariaDB root user.
        value: petid
        required: true
      - name: MYSQL_DATABASE
        displayName: MariaDB Database Name
        description: Name of the MariaDB database accessed.
        value: petid
        required: true
      - name: MARIADB_VERSION
        displayName: Version of MariaDB Image
        description: 'Version of MariaDB image to be used (10.3-el7, 10.3-el8, or latest).'
        value: 10.3-el8
        required: true
      - name: VOLUME_CAPACITY
        displayName: Volume Capacity
        description: 'Volume space available for data, e.g. 512Mi, 2Gi.'
        value: 1Gi
        required: true
    labels:
      template: mariadb-persistent-template